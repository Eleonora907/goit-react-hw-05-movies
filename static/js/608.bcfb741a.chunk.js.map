{"version":3,"file":"static/js/608.bcfb741a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","hooks/useHttp.js","components/MoviesSearchForm/MoviesSearchForm.styled.js","components/MoviesSearchForm/MoviesSearchForm.jsx","pages/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 25px;\n  margin-top: 25px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  margin-bottom: 10px;\n`;\n\nexport const MovieItemImage = styled.img`\n  width: 100%;\n  height: 100%;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noImageAvailable from './../../services/no_image_available.jpg';\nimport {\n  MovieItem,\n  MovieItemImage,\n  MoviesListStyled,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <MoviesListStyled>\n        {movies &&\n          movies.map(movie => (\n            <MovieItem key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <MovieItemImage\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : `${noImageAvailable}`\n                  }\n                  alt={movie.title}\n                />\n                {movie.title}\n              </Link>\n            </MovieItem>\n          ))}\n      </MoviesListStyled>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const SearchFormContainer = styled.form`\n  margin-top: 20px;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-width: 400px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  background-color: #555;\n  color: #fff;\n  border: none;\n  border-radius: 10px;\n  padding: 10px 15px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const SearchFormInput = styled.input`\n  width: 100%;\n  padding: 5px;\n  border: none;\n  border-radius: 10px;\n  background-color: #333;\n  color: #fff;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchFormButton,\n  SearchFormContainer,\n  SearchFormInput,\n} from './MoviesSearchForm.styled';\n\nconst MoviesSearchFrom = ({ handleSubmit, value, setValue }) => {\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <SearchFormContainer onSubmit={handleFormSubmit}>\n      <SearchFormInput type=\"text\" value={value} onChange={handleChange} />\n      <SearchFormButton type=\"submit\">Search</SearchFormButton>\n    </SearchFormContainer>\n  );\n};\n\nMoviesSearchFrom.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default MoviesSearchFrom;\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/moviesApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useHttp } from 'hooks/useHttp';\nimport MoviesSearchFrom from 'components/MoviesSearchForm/MoviesSearchForm';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies] = useHttp(fetchSearchMovies, query);\n\n  const handleSubmit = () => {\n    setSearchParams(value ? { query: value } : {});\n    setValue('');\n  };\n\n  return (\n    <div>\n      <MoviesSearchFrom\n        handleSubmit={handleSubmit}\n        value={value}\n        setValue={setValue}\n      />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'fb2464989c4bf946a62db0b7867c9354';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};"],"names":["MoviesListStyled","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieItemImage","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","noImageAvailable","alt","title","useHttp","apiFn","params","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","then","res","catch","toast","SearchFormContainer","SearchFormButton","SearchFormInput","handleSubmit","value","setValue","onSubmit","e","preventDefault","type","onChange","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useHttp","fetchSearchMovies","MoviesSearchFrom","MoviesList","API_KEY","BASE_URL","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","api_key","sent","abrupt","results","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","_context2","language","_x","fetchMovieCredits","_ref3","_callee3","_context3","cast","_x2","fetchMovieReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","include_adult","page","_x4"],"sourceRoot":""}